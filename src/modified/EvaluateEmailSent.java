/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package modified;

import java.io.File;
import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import nspro.BayesSpamFilter;
import nspro.Performance;

/**
 *
 * @author gezu
 */
public class EvaluateEmailSent extends javax.swing.JFrame {

    String[] spamTrain;
    String[] hamTrain;
    String[] spamValidation;
    String[] hamValidation;
    String[] spamTest;
    String[] hamTest;

    /**
     * Creates new form EvaluateEmailSent
     */
    public EvaluateEmailSent() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnSpamValid = new javax.swing.JButton();
        btnSpamTrain = new javax.swing.JButton();
        btnSpamTest = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtSpamdatasetTrain = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtSpamDatasetValid = new javax.swing.JList<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtSpamDatasetTest = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtPrecision = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtRecall = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtScore = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        btnHamTrain = new javax.swing.JButton();
        btnHamVal = new javax.swing.JButton();
        btnHamTest = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtHamdatasetTrain = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtHamdatasetValid = new javax.swing.JList<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtHamDatasetTest = new javax.swing.JList<>();
        btnRun = new javax.swing.JButton();

        fileChooser.setMultiSelectionEnabled(true);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Loading Email Training Data"));

        jLabel1.setText("Spam dataset Train");

        jLabel2.setText("Spam dataset validation");

        btnSpamValid.setText("Browse Spam Val");
        btnSpamValid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSpamValidActionPerformed(evt);
            }
        });

        btnSpamTrain.setText("Browse spam Train");
        btnSpamTrain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSpamTrainActionPerformed(evt);
            }
        });

        btnSpamTest.setText("Browse Spam Test");
        btnSpamTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSpamTestActionPerformed(evt);
            }
        });

        jLabel3.setText("Spam dataset Test");

        jScrollPane7.setViewportView(txtSpamdatasetTrain);

        jScrollPane3.setViewportView(txtSpamDatasetValid);

        jScrollPane5.setViewportView(txtSpamDatasetTest);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnSpamTrain)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 651, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnSpamValid)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(402, 402, 402)
                                .addComponent(btnSpamTest))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(357, 357, 357))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(357, 357, 357)))
                .addGap(0, 23, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnSpamTrain))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSpamValid)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(btnSpamTest))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Email Performance"));

        jLabel5.setText("Precision");

        jLabel6.setText("Recall");

        jLabel7.setText("F1 Score:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtRecall, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                        .addComponent(txtPrecision, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(51, 51, 51)
                        .addComponent(txtScore)))
                .addContainerGap(88, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrecision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRecall, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtScore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Checking the Email Status"));

        jLabel9.setText("Spam probability:");

        jLabel10.setText("Email status:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField7, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                    .addComponent(jTextField8))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Email Performance"));

        jLabel8.setText("Ham dataset Train");

        jLabel11.setText("Ham dataset Validation");

        jLabel12.setText("Ham dataset Test");

        btnHamTrain.setText("Browse Ham Train");
        btnHamTrain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHamTrainActionPerformed(evt);
            }
        });

        btnHamVal.setText("Browse Ham Val");
        btnHamVal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHamValActionPerformed(evt);
            }
        });

        btnHamTest.setText("Browse Ham Test");
        btnHamTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHamTestActionPerformed(evt);
            }
        });

        jScrollPane4.setViewportView(txtHamdatasetTrain);

        jScrollPane2.setViewportView(txtHamdatasetValid);

        jScrollPane1.setViewportView(txtHamDatasetTest);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnHamVal))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(239, 239, 239)
                        .addComponent(btnHamTest))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(228, 228, 228)
                        .addComponent(btnHamTrain))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHamTrain))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(btnHamVal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(btnHamTest))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, Short.MAX_VALUE))
        );

        btnRun.setText("Run");
        btnRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRunActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(btnRun, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnRun, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void btnRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRunActionPerformed

        try {
            String filename = "test.txt";

            System.out.println("Load training Data...");
//        String[] spamTrain = DataHelper.getFileContents("spam-train");
//        String[] hamTrain = DataHelper.getFileContents("ham-train");
//        String[] spamValidation = DataHelper.getFileContents("spam-validation");
//        String[] hamValidation = DataHelper.getFileContents("ham-validation");
//        String[] spamTest = DataHelper.getFileContents("spam-test");
//        String[] hamTest = DataHelper.getFileContents("ham-test");

            BayesSpamFilter spamfilter = new BayesSpamFilter(spamTrain, hamTrain);
//            Trainer trainer = new Trainer(spamfilter, spamValidation, hamValidation);
            TrainWithDataset trainer = new TrainWithDataset(spamfilter, spamValidation, hamValidation);
            System.out.println("Find best Threshold...");
            Performance perf = trainer.train(spamTest, hamTest, 12);

            System.out.println("Threshold: " + spamfilter.getSpamThreshhold());
            System.out.println("\nPerformance:");
            System.out.println("Precision: " + perf.getPrecision());
            System.out.println("Recall: " + perf.getRecall());
            System.out.println("F1 Score: " + perf.getF1Score());
            
            txtPrecision.setText(String.valueOf(perf.getPrecision()));
            txtRecall.setText(String.valueOf(perf.getRecall()));
            txtScore.setText(String.valueOf(perf.getF1Score()));

            System.out.println("\nCheck your Mail...");

            String content = new String(Files.readAllBytes(Paths.get(filename)));

            System.out.println("Spam probability: " + spamfilter.isSpamProbability(content));

            if (spamfilter.isSpam(content)) {
                System.out.println("This mail is probably spam!");
            } else {
                System.out.println("This mail looks fine...");
            }
        } catch (IOException ex) {
            Logger.getLogger(EvaluateEmailSent.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnRunActionPerformed
    public String fileID;

    public JFileChooser chooser;
//    private int mode;
//    public static final int MODE_OPEN = 1;
//    public static final int MODE_SAVE = 2;

//    public void setMode(int mode) {
//        this.mode = mode;
//    }
//    public String getSelectedFilePath() {
//        return textField.getText();
//    }
//     
//    public JFileChooser getFileChooser() {
//        return this.fileChooser;
//    }
//    public static String[] getFileContents(String path) throws IOException, URISyntaxException {
//        URI uri = Thread.currentThread().getContextClassLoader().getResource(path).toURI();
//        File[] files = new File(uri).listFiles();
//
//        String[] contents = new String[files.length];
//
//        for (int i = 0; i < files.length; i++) {
//            byte[] data = Files.readAllBytes(Paths.get(files[i].toURI()));
//            contents[i] = new String(data, Charset.defaultCharset());
//        }
//
//        return contents;
//    }

    private void btnSpamTrainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSpamTrainActionPerformed
        // TODO add your handling code here

        int returnVal = fileChooser.showOpenDialog(this);
        fileChooser.setMultiSelectionEnabled(true);
        if (returnVal == JFileChooser.APPROVE_OPTION) {

            File[] files = fileChooser.getSelectedFiles();
            String[] contents = new String[files.length];
            try {

//                for (File sourceFile : files) {
//                    System.out.println(sourceFile.getAbsolutePath());
//                    jList1.setListData(sourceFile.list());
//
//                }
                for (int i = 0; i < files.length; i++) {
                    byte[] data = Files.readAllBytes(Paths.get(files[i].toURI()));
                    contents[i] = new String(data, Charset.defaultCharset());
                    txtSpamdatasetTrain.setListData(contents);
                }
                System.out.println("problem accessing file" + contents.length);
                // What to do with the file, e.g. display it in a TextArea
                spamTrain = contents;

                System.out.println("contents = " + contents.length);
            } catch (IOException ex) {
                System.out.println("problem accessing file" + contents.length);
                ex.printStackTrace();
            }
        } else {
            System.out.println("File access cancelled by user.");
        }


    }//GEN-LAST:event_btnSpamTrainActionPerformed

    private void btnSpamValidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSpamValidActionPerformed

        // TODO add your handling code here
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File[] files = fileChooser.getSelectedFiles();
            String[] contents = new String[files.length];
            try {
                for (int i = 0; i < files.length; i++) {
                    byte[] data = Files.readAllBytes(Paths.get(files[i].toURI()));
                    contents[i] = new String(data, Charset.defaultCharset());
                    txtSpamDatasetValid.setListData(contents);
                }
                // What to do with the file, e.g. display it in a TextArea
                spamValidation = contents;
            } catch (IOException ex) {
                System.out.println("problem accessing file" + contents.length);
            }
        } else {
            System.out.println("File access cancelled by user.");
        }


    }//GEN-LAST:event_btnSpamValidActionPerformed

    private void btnSpamTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSpamTestActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File[] files = fileChooser.getSelectedFiles();
            String[] contents = new String[files.length];

            try {

                for (int i = 0; i < files.length; i++) {
                    byte[] data = Files.readAllBytes(Paths.get(files[i].toURI()));
                    contents[i] = new String(data, Charset.defaultCharset());
                    txtSpamDatasetTest.setListData(contents);
                }
                // What to do with the file, e.g. display it in a TextArea

                spamTest = contents;
            } catch (IOException ex) {
                System.out.println("problem accessing file" + contents.length);
            }
        } else {
            System.out.println("File access cancelled by user.");
        }


    }//GEN-LAST:event_btnSpamTestActionPerformed

    private void btnHamTrainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHamTrainActionPerformed
        // TODO add your handling code here:

        // TODO add your handling code here:
        // TODO add your handling code here
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File[] files = fileChooser.getSelectedFiles();
            String[] contents = new String[files.length];

            try {

                for (int i = 0; i < files.length; i++) {
                    byte[] data = Files.readAllBytes(Paths.get(files[i].toURI()));
                    contents[i] = new String(data, Charset.defaultCharset());
                    txtHamdatasetTrain.setListData(contents);
                }
                // What to do with the file, e.g. display it in a TextArea
                hamTrain = contents;
            } catch (IOException ex) {
                System.out.println("problem accessing file" + contents.length);
            }
        } else {
            System.out.println("File access cancelled by user.");
        }

    }//GEN-LAST:event_btnHamTrainActionPerformed

    private void btnHamValActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHamValActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File[] files = fileChooser.getSelectedFiles();
            String[] contents = new String[files.length];

            try {

                for (int i = 0; i < files.length; i++) {
                    byte[] data = Files.readAllBytes(Paths.get(files[i].toURI()));
                    contents[i] = new String(data, Charset.defaultCharset());
                    txtHamdatasetValid.setListData(contents);
                }
                // What to do with the file, e.g. display it in a TextArea
                hamValidation = contents;
            } catch (IOException ex) {
                System.out.println("problem accessing file" + contents.length);
            }
        } else {
            System.out.println("File access cancelled by user.");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnHamValActionPerformed

    private void btnHamTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHamTestActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File[] file = fileChooser.getSelectedFiles();
            String[] contents = new String[file.length];
            try {
                for (int i = 0; i < file.length; i++) {
                    byte[] data = Files.readAllBytes(Paths.get(file[i].toURI()));
                    contents[i] = new String(data, Charset.defaultCharset());
                    txtHamDatasetTest.setListData(contents);
                }
                // What to do with the file, e.g. display it in a TextArea
                hamTest = contents;
            } catch (IOException ex) {
                System.out.println("problem accessing file" + contents.length);
            }
        } else {
            System.out.println("File access cancelled by user.");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnHamTestActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EvaluateEmailSent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EvaluateEmailSent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EvaluateEmailSent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EvaluateEmailSent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EvaluateEmailSent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHamTest;
    private javax.swing.JButton btnHamTrain;
    private javax.swing.JButton btnHamVal;
    private javax.swing.JButton btnRun;
    private javax.swing.JButton btnSpamTest;
    private javax.swing.JButton btnSpamTrain;
    private javax.swing.JButton btnSpamValid;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JList<String> txtHamDatasetTest;
    private javax.swing.JList<String> txtHamdatasetTrain;
    private javax.swing.JList<String> txtHamdatasetValid;
    private javax.swing.JTextField txtPrecision;
    private javax.swing.JTextField txtRecall;
    private javax.swing.JTextField txtScore;
    private javax.swing.JList<String> txtSpamDatasetTest;
    private javax.swing.JList<String> txtSpamDatasetValid;
    private javax.swing.JList<String> txtSpamdatasetTrain;
    // End of variables declaration//GEN-END:variables
}
