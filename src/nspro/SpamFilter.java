/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nspro;

import java.io.File;
import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/**
 *
 * @author gezu
 */
public class SpamFilter extends javax.swing.JInternalFrame {

    String[] spamTrain;
    String[] hamTrain;
    String[] spamValidation;
    String[] hamValidation;
    String[] spamTest;
    String[] hamTest;

    /**
     * Creates new form SpamFilter
     */
    public SpamFilter() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnSpamValid = new javax.swing.JButton();
        btnSpamTrain = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtSpamDatasetTest = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtSpamDatasetValid = new javax.swing.JTextArea();
        btnSpamTest = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtSpamdatasetTrain = new javax.swing.JList<>();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtHamdatasetValid = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtHamdatasetTrain = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtHamDatasetTest = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        btnHamTrain = new javax.swing.JButton();
        btnHamVal = new javax.swing.JButton();
        btnHamTest = new javax.swing.JButton();
        btnRun = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtEmailStatus = new javax.swing.JTextField();
        txtSpamProbability = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        txtPrecision = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtRecall = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtScore = new javax.swing.JTextField();
        txtBestThreshold2 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Loading Email Training Data"));

        jLabel1.setText("Spam dataset Train");

        jLabel2.setText("Spam dataset validation");

        btnSpamValid.setText("Browse Spam Val");
        btnSpamValid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSpamValidActionPerformed(evt);
            }
        });

        btnSpamTrain.setText("Browse spam Train");
        btnSpamTrain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSpamTrainActionPerformed(evt);
            }
        });

        txtSpamDatasetTest.setColumns(20);
        txtSpamDatasetTest.setRows(5);
        jScrollPane4.setViewportView(txtSpamDatasetTest);

        txtSpamDatasetValid.setColumns(20);
        txtSpamDatasetValid.setRows(5);
        jScrollPane5.setViewportView(txtSpamDatasetValid);

        btnSpamTest.setText("Browse Spam Test");
        btnSpamTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSpamTestActionPerformed(evt);
            }
        });

        jLabel3.setText("Spam dataset Test");

        jScrollPane7.setViewportView(txtSpamdatasetTrain);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSpamValid))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 561, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 561, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 561, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSpamTrain))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSpamTest)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btnSpamTrain))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(btnSpamValid))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSpamTest)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Email Performance"));

        jLabel8.setText("Ham dataset Train");

        jLabel11.setText("Ham dataset Validation");

        txtHamdatasetValid.setColumns(20);
        txtHamdatasetValid.setRows(5);
        jScrollPane1.setViewportView(txtHamdatasetValid);

        txtHamdatasetTrain.setColumns(20);
        txtHamdatasetTrain.setRows(5);
        jScrollPane2.setViewportView(txtHamdatasetTrain);

        txtHamDatasetTest.setColumns(20);
        txtHamDatasetTest.setRows(5);
        jScrollPane6.setViewportView(txtHamDatasetTest);

        jLabel12.setText("Ham dataset Test");

        btnHamTrain.setText("Browse Ham Train");
        btnHamTrain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHamTrainActionPerformed(evt);
            }
        });

        btnHamVal.setText("Browse Ham Val");
        btnHamVal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHamValActionPerformed(evt);
            }
        });

        btnHamTest.setText("Browse Ham Test");
        btnHamTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHamTestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel12)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnHamVal))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(jLabel11)
                                    .addGap(25, 25, 25)
                                    .addComponent(btnHamTrain))
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnHamTest)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(btnHamTrain))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(btnHamVal))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(btnHamTest))
        );

        btnRun.setText("Run");
        btnRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRunActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Checking the Email Status"));

        jLabel9.setText("Spam probability:");

        jLabel10.setText("Email status:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtEmailStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                    .addComponent(txtSpamProbability))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtSpamProbability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtEmailStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(78, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel22.setText("Precision");

        jLabel23.setText("Recall");

        jLabel24.setText("F1 Score:");

        jLabel25.setText("The best Threshold values");

        jLabel26.setText("Performance Labels");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel25)
                        .addGap(18, 18, 18)
                        .addComponent(txtBestThreshold2, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel7Layout.createSequentialGroup()
                                    .addComponent(jLabel22)
                                    .addGap(56, 56, 56)
                                    .addComponent(txtPrecision, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                                        .addComponent(jLabel23)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtRecall, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                                        .addComponent(jLabel24)
                                        .addGap(51, 51, 51)
                                        .addComponent(txtScore, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(160, 160, 160)
                                .addComponent(jLabel26)))))
                .addContainerGap(67, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBestThreshold2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addGap(39, 39, 39)
                .addComponent(jLabel26)
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrecision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRecall, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addGap(25, 25, 25)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(txtScore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRun, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(417, 417, 417))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRun, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSpamValidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSpamValidActionPerformed

        // TODO add your handling code here
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File[] files = fileChooser.getSelectedFiles();
            String[] contents = new String[files.length];
            try {
                for (int i = 0; i < files.length; i++) {
                    byte[] data = Files.readAllBytes(Paths.get(files[i].toURI()));
                    contents[i] = new String(data, Charset.defaultCharset());
                    txtSpamDatasetValid.setText(contents[i]);
                }
                // What to do with the file, e.g. display it in a TextArea
                spamValidation = contents;
            } catch (IOException ex) {
                System.out.println("problem accessing file" + contents.length);
            }
        } else {
            System.out.println("File access cancelled by user.");
        }

    }//GEN-LAST:event_btnSpamValidActionPerformed

    private void btnSpamTrainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSpamTrainActionPerformed
        // TODO add your handling code here

        int returnVal = fileChooser.showOpenDialog(this);
        fileChooser.setMultiSelectionEnabled(true);
        if (returnVal == JFileChooser.APPROVE_OPTION) {

            File[] files = fileChooser.getSelectedFiles();
            String[] listData = new String[files.length];
            try {

                //                for (File sourceFile : files) {
                //                    System.out.println(sourceFile.getAbsolutePath());
                //                    jList1.setListData(sourceFile.list());
                //
                //                }
                for (int i = 0; i < files.length; i++) {
                    byte[] data = Files.readAllBytes(Paths.get(files[i].toURI()));
                    listData[i] = new String(data, Charset.defaultCharset());

                    txtSpamdatasetTrain.setListData(listData);
                }
                System.out.println("the length of file: " + listData.length);
                // What to do with the file, e.g. display it in a TextArea
                spamTrain = listData;

                System.out.println("contents = " + listData.length);
            } catch (IOException ex) {
                System.out.println("problem accessing file" + listData.length);
                ex.printStackTrace();
            }
        } else {
            System.out.println("File access cancelled by user.");
        }

    }//GEN-LAST:event_btnSpamTrainActionPerformed

    private void btnSpamTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSpamTestActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File[] files = fileChooser.getSelectedFiles();
            String[] contents = new String[files.length];

            try {

                for (int i = 0; i < files.length; i++) {
                    byte[] data = Files.readAllBytes(Paths.get(files[i].toURI()));
                    contents[i] = new String(data, Charset.defaultCharset());
                    txtSpamDatasetTest.setText(contents[i]);
                }
                // What to do with the file, e.g. display it in a TextArea

                spamTest = contents;
            } catch (IOException ex) {
                System.out.println("problem accessing file" + contents.length);
            }
        } else {
            System.out.println("File access cancelled by user.");
        }

    }//GEN-LAST:event_btnSpamTestActionPerformed

    private void btnHamTrainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHamTrainActionPerformed
        // TODO add your handling code here:

        // TODO add your handling code here:
        // TODO add your handling code here
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File[] files = fileChooser.getSelectedFiles();
            String[] contents = new String[files.length];

            try {

                for (int i = 0; i < files.length; i++) {
                    byte[] data = Files.readAllBytes(Paths.get(files[i].toURI()));
                    contents[i] = new String(data, Charset.defaultCharset());
                    txtHamdatasetTrain.setText(contents[i]);
                }
                // What to do with the file, e.g. display it in a TextArea
                hamTrain = contents;
            } catch (IOException ex) {
                System.out.println("problem accessing file" + contents.length);
            }
        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_btnHamTrainActionPerformed

    private void btnHamValActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHamValActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File[] files = fileChooser.getSelectedFiles();
            String[] contents = new String[files.length];

            try {

                for (int i = 0; i < files.length; i++) {
                    byte[] data = Files.readAllBytes(Paths.get(files[i].toURI()));
                    contents[i] = new String(data, Charset.defaultCharset());
                    txtHamdatasetValid.setText(contents[i]);
                }
                // What to do with the file, e.g. display it in a TextArea
                hamValidation = contents;
            } catch (IOException ex) {
                System.out.println("problem accessing file" + contents.length);
            }
        } else {
            System.out.println("File access cancelled by user.");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnHamValActionPerformed

    private void btnHamTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHamTestActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File[] file = fileChooser.getSelectedFiles();
            String[] contents = new String[file.length];
            try {
                for (int i = 0; i < file.length; i++) {
                    byte[] data = Files.readAllBytes(Paths.get(file[i].toURI()));
                    contents[i] = new String(data, Charset.defaultCharset());
                    txtHamDatasetTest.setText(contents[i]);
                }
                // What to do with the file, e.g. display it in a TextArea
                hamTest = contents;
            } catch (IOException ex) {
                System.out.println("problem accessing file" + contents.length);
            }
        } else {
            System.out.println("File access cancelled by user.");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnHamTestActionPerformed

    private void btnRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRunActionPerformed

        try {
            String filename = "test"; //gezu don't forget to add english dictionary words

            System.out.println("Load training Data...");

            BayesSpamFilter spamfilter = new BayesSpamFilter(spamTrain, hamTrain);
            TrainDataset trainer = new TrainDataset(spamfilter, spamValidation, hamValidation);
            System.out.println("Find best Threshold...");
            Performance perf = trainer.train(spamTest, hamTest, 12);

            System.out.println("\nPerformance:");

            txtBestThreshold.setText(String.valueOf(spamfilter.getSpamThreshhold()));
            txtPrecision.setText(String.valueOf(perf.getPrecision()));
            txtRecall.setText(String.valueOf(perf.getRecall()));
            txtScore.setText(String.valueOf(perf.getF1Score()));

            System.out.println("Threshold: " + spamfilter.getSpamThreshhold());
            System.out.println("Precision: " + perf.getPrecision());
            System.out.println("Recall: " + perf.getRecall());
            System.out.println("F1 Score: " + perf.getF1Score());

            System.out.println("\nCheck your Mail...");

            String content = new String(Files.readAllBytes(Paths.get(filename)));

            System.out.println("Spam probability: " + spamfilter.isSpamProbability(content));

            if (spamfilter.isSpam(content)) {
                System.out.println("This mail is probably spam!");
            } else {
                System.out.println("This mail looks fine...");
            }
        } catch (IOException ex) {
            Logger.getLogger(SpamFilter.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRunActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHamTest;
    private javax.swing.JButton btnHamTrain;
    private javax.swing.JButton btnHamVal;
    private javax.swing.JButton btnRun;
    private javax.swing.JButton btnSpamTest;
    private javax.swing.JButton btnSpamTrain;
    private javax.swing.JButton btnSpamValid;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextField txtBestThreshold;
    private javax.swing.JTextField txtBestThreshold1;
    private javax.swing.JTextField txtBestThreshold2;
    private javax.swing.JTextField txtEmailStatus;
    private javax.swing.JTextArea txtHamDatasetTest;
    private javax.swing.JTextArea txtHamdatasetTrain;
    private javax.swing.JTextArea txtHamdatasetValid;
    private javax.swing.JTextField txtPrecision;
    private javax.swing.JTextField txtRecall;
    private javax.swing.JTextField txtScore;
    private javax.swing.JTextArea txtSpamDatasetTest;
    private javax.swing.JTextArea txtSpamDatasetValid;
    private javax.swing.JTextField txtSpamProbability;
    private javax.swing.JList<String> txtSpamdatasetTrain;
    // End of variables declaration//GEN-END:variables
}
